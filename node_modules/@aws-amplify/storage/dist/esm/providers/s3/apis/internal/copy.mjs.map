{"version":3,"file":"copy.mjs","sources":["../../../../../../src/providers/s3/apis/internal/copy.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { resolveS3ConfigAndInput } from '../../utils';\nimport { StorageValidationErrorCode } from '../../../../errors/types/validation';\nimport { assertValidationError } from '../../../../errors/utils/assertValidationError';\nimport { copyObject } from '../../utils/client';\nimport { getStorageUserAgentValue } from '../../utils/userAgent';\nimport { logger } from '../../../../utils';\nexport const copy = async (amplify, input) => {\n    const { source: { key: sourceKey }, destination: { key: destinationKey }, } = input;\n    assertValidationError(!!sourceKey, StorageValidationErrorCode.NoSourceKey);\n    assertValidationError(!!destinationKey, StorageValidationErrorCode.NoDestinationKey);\n    const { s3Config, bucket, keyPrefix: sourceKeyPrefix, } = await resolveS3ConfigAndInput(amplify, input.source);\n    const { keyPrefix: destinationKeyPrefix } = await resolveS3ConfigAndInput(amplify, input.destination); // resolveS3ConfigAndInput does not make extra API calls or storage access if called repeatedly.\n    // TODO(ashwinkumar6) V6-logger: warn `You may copy files from another user if the source level is \"protected\", currently it's ${srcLevel}`\n    const finalCopySource = `${bucket}/${sourceKeyPrefix}${sourceKey}`;\n    const finalCopyDestination = `${destinationKeyPrefix}${destinationKey}`;\n    logger.debug(`copying \"${finalCopySource}\" to \"${finalCopyDestination}\".`);\n    await copyObject({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(StorageAction.Copy),\n    }, {\n        Bucket: bucket,\n        CopySource: finalCopySource,\n        Key: finalCopyDestination,\n        MetadataDirective: 'COPY', // Copies over metadata like contentType as well\n    });\n    return {\n        key: destinationKey,\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQY,MAAC,IAAI,GAAG,OAAO,OAAO,EAAE,KAAK,KAAK;AAC9C,IAAI,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,WAAW,EAAE,EAAE,GAAG,EAAE,cAAc,EAAE,GAAG,GAAG,KAAK,CAAC;AACxF,IAAI,qBAAqB,CAAC,CAAC,CAAC,SAAS,EAAE,0BAA0B,CAAC,WAAW,CAAC,CAAC;AAC/E,IAAI,qBAAqB,CAAC,CAAC,CAAC,cAAc,EAAE,0BAA0B,CAAC,gBAAgB,CAAC,CAAC;AACzF,IAAI,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,GAAG,GAAG,MAAM,uBAAuB,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AACnH,IAAI,MAAM,EAAE,SAAS,EAAE,oBAAoB,EAAE,GAAG,MAAM,uBAAuB,CAAC,OAAO,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;AAC1G;AACA,IAAI,MAAM,eAAe,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,eAAe,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AACvE,IAAI,MAAM,oBAAoB,GAAG,CAAC,EAAE,oBAAoB,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;AAC5E,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,eAAe,CAAC,MAAM,EAAE,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/E,IAAI,MAAM,UAAU,CAAC;AACrB,QAAQ,GAAG,QAAQ;AACnB,QAAQ,cAAc,EAAE,wBAAwB,CAAC,aAAa,CAAC,IAAI,CAAC;AACpE,KAAK,EAAE;AACP,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,UAAU,EAAE,eAAe;AACnC,QAAQ,GAAG,EAAE,oBAAoB;AACjC,QAAQ,iBAAiB,EAAE,MAAM;AACjC,KAAK,CAAC,CAAC;AACP,IAAI,OAAO;AACX,QAAQ,GAAG,EAAE,cAAc;AAC3B,KAAK,CAAC;AACN;;;;"}