{"version":3,"file":"getUrl.mjs","sources":["../../../../../../src/providers/s3/apis/internal/getUrl.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { StorageValidationErrorCode } from '../../../../errors/types/validation';\nimport { getPresignedGetObjectUrl } from '../../utils/client';\nimport { resolveS3ConfigAndInput } from '../../utils';\nimport { assertValidationError } from '../../../../errors/utils/assertValidationError';\nimport { DEFAULT_PRESIGN_EXPIRATION, MAX_URL_EXPIRATION, } from '../../utils/constants';\nimport { getProperties } from './getProperties';\nexport const getUrl = async (amplify, input) => {\n    const { key, options } = input;\n    if (options?.validateObjectExistence) {\n        await getProperties(amplify, { key, options }, StorageAction.GetUrl);\n    }\n    const { s3Config, keyPrefix, bucket } = await resolveS3ConfigAndInput(amplify, options);\n    let urlExpirationInSec = options?.expiresIn ?? DEFAULT_PRESIGN_EXPIRATION;\n    const awsCredExpiration = s3Config.credentials?.expiration;\n    if (awsCredExpiration) {\n        const awsCredExpirationInSec = Math.floor((awsCredExpiration.getTime() - Date.now()) / 1000);\n        urlExpirationInSec = Math.min(awsCredExpirationInSec, urlExpirationInSec);\n    }\n    const maxUrlExpirationInSec = MAX_URL_EXPIRATION / 1000;\n    assertValidationError(urlExpirationInSec <= maxUrlExpirationInSec, StorageValidationErrorCode.UrlExpirationMaxLimitExceed);\n    // expiresAt is the minimum of credential expiration and url expiration\n    return {\n        url: await getPresignedGetObjectUrl({\n            ...s3Config,\n            expiration: urlExpirationInSec,\n        }, {\n            Bucket: bucket,\n            Key: `${keyPrefix}${key}`,\n        }),\n        expiresAt: new Date(Date.now() + urlExpirationInSec * 1000),\n    };\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQY,MAAC,MAAM,GAAG,OAAO,OAAO,EAAE,KAAK,KAAK;AAChD,IAAI,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;AACnC,IAAI,IAAI,OAAO,EAAE,uBAAuB,EAAE;AAC1C,QAAQ,MAAM,aAAa,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;AAC7E,KAAK;AACL,IAAI,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,MAAM,uBAAuB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC5F,IAAI,IAAI,kBAAkB,GAAG,OAAO,EAAE,SAAS,IAAI,0BAA0B,CAAC;AAC9E,IAAI,MAAM,iBAAiB,GAAG,QAAQ,CAAC,WAAW,EAAE,UAAU,CAAC;AAC/D,IAAI,IAAI,iBAAiB,EAAE;AAC3B,QAAQ,MAAM,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC;AACrG,QAAQ,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,CAAC;AAClF,KAAK;AACL,IAAI,MAAM,qBAAqB,GAAG,kBAAkB,GAAG,IAAI,CAAC;AAC5D,IAAI,qBAAqB,CAAC,kBAAkB,IAAI,qBAAqB,EAAE,0BAA0B,CAAC,2BAA2B,CAAC,CAAC;AAC/H;AACA,IAAI,OAAO;AACX,QAAQ,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC5C,YAAY,GAAG,QAAQ;AACvB,YAAY,UAAU,EAAE,kBAAkB;AAC1C,SAAS,EAAE;AACX,YAAY,MAAM,EAAE,MAAM;AAC1B,YAAY,GAAG,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;AACrC,SAAS,CAAC;AACV,QAAQ,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,kBAAkB,GAAG,IAAI,CAAC;AACnE,KAAK,CAAC;AACN;;;;"}