import * as React from 'react';
import * as RadixDirection from '@radix-ui/react-direction';
import { sanitizeNamespaceImport, createTheme } from '@aws-amplify/ui';
import { ThemeContext } from './ThemeContext.mjs';

// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)
// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS
const { DirectionProvider } = sanitizeNamespaceImport(RadixDirection);
/**
 * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/theming)
 */
function ThemeProvider({ children, colorMode, direction = 'ltr', nonce, theme, }) {
    const value = React.useMemo(() => ({ theme: createTheme(theme), colorMode }), [theme, colorMode]);
    const { theme: { name, cssText }, } = value;
    return (React.createElement(ThemeContext.Provider, { value: value },
        React.createElement(DirectionProvider, { dir: direction },
            React.createElement("div", { "data-amplify-theme": name, "data-amplify-color-mode": colorMode, dir: direction }, children),
            typeof theme === 'undefined' || /<\/style/i.test(cssText) ? null : (React.createElement("style", { id: `amplify-theme-${name}`, 
                // eslint-disable-next-line react/no-danger
                dangerouslySetInnerHTML: { __html: cssText }, nonce: nonce })))));
}

export { ThemeProvider };
