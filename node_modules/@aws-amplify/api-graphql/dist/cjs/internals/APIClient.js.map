{"version":3,"file":"APIClient.js","sources":["../../../src/internals/APIClient.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCustomHeaders = exports.authModeParams = exports.normalizeMutationInput = exports.buildGraphQLVariables = exports.generateGraphQLDocument = exports.generateSelectionSet = exports.selectionSetIRToString = exports.customSelectionSetToIR = exports.graphQLOperationsInfo = exports.initializeModel = exports.flattenItems = void 0;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst resolveOwnerFields_1 = require(\"../utils/resolveOwnerFields\");\nconst types_1 = require(\"../types\");\nconst connectionType = {\n    HAS_ONE: 'HAS_ONE',\n    HAS_MANY: 'HAS_MANY',\n    BELONGS_TO: 'BELONGS_TO',\n};\n/**\n *\n * @param GraphQL response object\n * @returns response object with `items` properties flattened\n */\nconst flattenItems = (obj) => {\n    const res = {};\n    Object.entries(obj).forEach(([prop, value]) => {\n        if (typeof value === 'object' && !Array.isArray(value) && value !== null) {\n            if (value.items !== undefined) {\n                res[prop] = value.items.map((item) => (0, exports.flattenItems)(item));\n                return;\n            }\n            res[prop] = (0, exports.flattenItems)(value);\n            return;\n        }\n        res[prop] = value;\n    });\n    return res;\n};\nexports.flattenItems = flattenItems;\n// TODO: this should accept single result to support CRUD methods; create helper for array/list\nfunction initializeModel(client, modelName, result, modelIntrospection, authMode, authToken, context = false) {\n    const introModel = modelIntrospection.models[modelName];\n    const introModelFields = introModel.fields;\n    const modelFields = Object.entries(introModelFields)\n        .filter(([_, field]) => field?.type?.model !== undefined)\n        .map(([fieldName]) => fieldName);\n    return result.map(record => {\n        const initializedRelationalFields = {};\n        for (const fieldName of modelFields) {\n            const modelField = introModelFields[fieldName];\n            const modelFieldType = modelField?.type;\n            const relatedModelName = modelFieldType.model;\n            const relatedModel = modelIntrospection.models[relatedModelName];\n            const relatedModelPKFieldName = relatedModel.primaryKeyInfo.primaryKeyFieldName;\n            const relatedModelSKFieldNames = relatedModel.primaryKeyInfo.sortKeyFieldNames;\n            const relationType = modelField.association?.connectionType;\n            let connectionFields = [];\n            if (modelField.association &&\n                'associatedWith' in modelField.association) {\n                connectionFields = modelField.association.associatedWith;\n            }\n            let targetNames = [];\n            if (modelField.association && 'targetNames' in modelField.association) {\n                targetNames = modelField.association.targetNames;\n            }\n            switch (relationType) {\n                case connectionType.HAS_ONE:\n                case connectionType.BELONGS_TO:\n                    const sortKeyValues = relatedModelSKFieldNames.reduce((acc, curVal) => {\n                        if (record[curVal]) {\n                            return (acc[curVal] = record[curVal]);\n                        }\n                    }, {});\n                    if (context) {\n                        initializedRelationalFields[fieldName] = (contextSpec, options) => {\n                            if (record[targetNames[0]]) {\n                                return client.models[relatedModelName].get(contextSpec, {\n                                    [relatedModelPKFieldName]: record[targetNames[0]],\n                                    ...sortKeyValues,\n                                }, {\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return undefined;\n                        };\n                    }\n                    else {\n                        initializedRelationalFields[fieldName] = (options) => {\n                            if (record[targetNames[0]]) {\n                                return client.models[relatedModelName].get({\n                                    [relatedModelPKFieldName]: record[targetNames[0]],\n                                    ...sortKeyValues,\n                                }, {\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return undefined;\n                        };\n                    }\n                    break;\n                case connectionType.HAS_MANY:\n                    const parentPk = introModel.primaryKeyInfo.primaryKeyFieldName;\n                    const parentSK = introModel.primaryKeyInfo.sortKeyFieldNames;\n                    // M:N check - TODO: refactor\n                    const relatedModelField = relatedModel.fields[connectionFields[0]];\n                    const relatedModelFieldType = relatedModelField.type;\n                    if (relatedModelFieldType.model) {\n                        let relatedTargetNames = [];\n                        if (relatedModelField.association &&\n                            'targetNames' in relatedModelField.association) {\n                            relatedTargetNames = relatedModelField.association?.targetNames;\n                        }\n                        const hasManyFilter = relatedTargetNames.map((field, idx) => {\n                            if (idx === 0) {\n                                return { [field]: { eq: record[parentPk] } };\n                            }\n                            return { [field]: { eq: record[parentSK[idx - 1]] } };\n                        });\n                        if (context) {\n                            initializedRelationalFields[fieldName] = (contextSpec, options) => {\n                                if (record[parentPk]) {\n                                    return client.models[relatedModelName].list(contextSpec, {\n                                        filter: { and: hasManyFilter },\n                                        limit: options?.limit,\n                                        nextToken: options?.nextToken,\n                                        authMode: options?.authMode || authMode,\n                                        authToken: options?.authToken || authToken,\n                                    });\n                                }\n                                return [];\n                            };\n                        }\n                        else {\n                            initializedRelationalFields[fieldName] = (options) => {\n                                if (record[parentPk]) {\n                                    return client.models[relatedModelName].list({\n                                        filter: { and: hasManyFilter },\n                                        limit: options?.limit,\n                                        nextToken: options?.nextToken,\n                                        authMode: options?.authMode || authMode,\n                                        authToken: options?.authToken || authToken,\n                                    });\n                                }\n                                return [];\n                            };\n                        }\n                        break;\n                    }\n                    const hasManyFilter = connectionFields.map((field, idx) => {\n                        if (idx === 0) {\n                            return { [field]: { eq: record[parentPk] } };\n                        }\n                        return { [field]: { eq: record[parentSK[idx - 1]] } };\n                    });\n                    if (context) {\n                        initializedRelationalFields[fieldName] = (contextSpec, options) => {\n                            if (record[parentPk]) {\n                                return client.models[relatedModelName].list(contextSpec, {\n                                    filter: { and: hasManyFilter },\n                                    limit: options?.limit,\n                                    nextToken: options?.nextToken,\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return [];\n                        };\n                    }\n                    else {\n                        initializedRelationalFields[fieldName] = (options) => {\n                            if (record[parentPk]) {\n                                return client.models[relatedModelName].list({\n                                    filter: { and: hasManyFilter },\n                                    limit: options?.limit,\n                                    nextToken: options?.nextToken,\n                                    authMode: options?.authMode || authMode,\n                                    authToken: options?.authToken || authToken,\n                                });\n                            }\n                            return [];\n                        };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { ...record, ...initializedRelationalFields };\n    });\n}\nexports.initializeModel = initializeModel;\nexports.graphQLOperationsInfo = {\n    CREATE: { operationPrefix: 'create', usePlural: false },\n    READ: { operationPrefix: 'get', usePlural: false },\n    UPDATE: { operationPrefix: 'update', usePlural: false },\n    DELETE: { operationPrefix: 'delete', usePlural: false },\n    LIST: { operationPrefix: 'list', usePlural: true },\n    INDEX_QUERY: { operationPrefix: '', usePlural: false },\n    ONCREATE: { operationPrefix: 'onCreate', usePlural: false },\n    ONUPDATE: { operationPrefix: 'onUpdate', usePlural: false },\n    ONDELETE: { operationPrefix: 'onDelete', usePlural: false },\n    OBSERVE_QUERY: { operationPrefix: 'observeQuery', usePlural: false },\n};\nconst SELECTION_SET_WILDCARD = '*';\nfunction defaultSelectionSetForNonModelWithIR(nonModelDefinition, modelIntrospection) {\n    const { fields } = nonModelDefinition;\n    const mappedFields = Object.values(fields)\n        .map(({ type, name }) => {\n        if (typeof type.enum === 'string') {\n            return [name, FIELD_IR];\n        }\n        if (typeof type.nonModel === 'string') {\n            return [\n                name,\n                defaultSelectionSetForNonModelWithIR(modelIntrospection.nonModels[type.nonModel], modelIntrospection),\n            ];\n        }\n        if (typeof type === 'string') {\n            return [name, FIELD_IR];\n        }\n        return undefined;\n    })\n        .filter((pair) => pair !== undefined);\n    return Object.fromEntries(mappedFields);\n}\nfunction defaultSelectionSetForModel(modelDefinition) {\n    // fields that are explicitly part of the graphql schema; not\n    // inferred from owner auth rules.\n    const { fields } = modelDefinition;\n    const explicitFields = Object.values(fields)\n        // Default selection set omits model fields\n        .map(({ type, name }) => {\n        if (typeof type === 'string')\n            return name;\n        if (typeof type === 'object') {\n            if (typeof type?.enum === 'string') {\n                return name;\n            }\n            else if (typeof type?.nonModel === 'string') {\n                return `${name}.${SELECTION_SET_WILDCARD}`;\n            }\n        }\n    })\n        .filter(Boolean);\n    // fields used for owner auth rules that may or may not also\n    // be explicit on the model.\n    const ownerFields = (0, resolveOwnerFields_1.resolveOwnerFields)(modelDefinition);\n    return Array.from(new Set(explicitFields.concat(ownerFields)));\n}\nconst FIELD_IR = '';\n/**\n * Generates nested Custom Selection Set IR from path\n *\n * @param modelDefinitions\n * @param modelName\n * @param selectionSet - array of object paths\n * @example\n * ### Given\n * `selectionSet = ['id', 'comments.post.id']`\n * ### Returns\n * ```ts\n * {\n *   id: '',\n *   comments: {\n *     items: { post: { id: '' } }\n *   }\n * }\n * ```\n */\nfunction customSelectionSetToIR(modelIntrospection, modelName, selectionSet) {\n    const dotNotationToObject = (path, modelOrNonModelName) => {\n        const [fieldName, ...rest] = path.split('.');\n        const nested = rest[0];\n        const modelOrNonModelDefinition = modelIntrospection.models[modelOrNonModelName] ??\n            modelIntrospection.nonModels[modelOrNonModelName];\n        const modelOrNonModelFields = modelOrNonModelDefinition?.fields;\n        const relatedModel = modelOrNonModelFields?.[fieldName]?.type?.model;\n        const relatedModelDefinition = modelIntrospection.models[relatedModel];\n        const relatedNonModel = modelOrNonModelFields?.[fieldName]?.type?.nonModel;\n        const relatedNonModelDefinition = modelIntrospection.nonModels[relatedNonModel];\n        const isModelOrNonModelOrFieldType = relatedModelDefinition\n            ? 'model'\n            : relatedNonModelDefinition\n                ? 'nonModel'\n                : 'field';\n        if (isModelOrNonModelOrFieldType === 'nonModel') {\n            let result = {};\n            if (!nested) {\n                throw Error(`${fieldName} must declare a wildcard (*) or a field of custom type ${relatedNonModel}`);\n            }\n            if (nested === SELECTION_SET_WILDCARD) {\n                result = {\n                    [fieldName]: defaultSelectionSetForNonModelWithIR(relatedNonModelDefinition, modelIntrospection),\n                };\n            }\n            else {\n                result = {\n                    [fieldName]: dotNotationToObject(rest.join('.'), relatedNonModel),\n                };\n            }\n            return result;\n        }\n        else if (isModelOrNonModelOrFieldType === 'model') {\n            let result = {};\n            if (!nested) {\n                throw Error(`${fieldName} must declare a wildcard (*) or a field of model ${relatedModel}`);\n            }\n            if (nested === SELECTION_SET_WILDCARD) {\n                const relatedModelDefinition = modelIntrospection.models[relatedModel];\n                result = {\n                    [fieldName]: modelsDefaultSelectionSetIR(relatedModelDefinition),\n                };\n            }\n            else {\n                result = {\n                    [fieldName]: dotNotationToObject(rest.join('.'), relatedModel),\n                };\n            }\n            if (modelOrNonModelFields[fieldName]?.isArray) {\n                result = {\n                    [fieldName]: {\n                        items: result[fieldName],\n                    },\n                };\n            }\n            return result;\n        }\n        else {\n            const modelField = modelOrNonModelFields?.[fieldName];\n            const nonModelDefinition = modelIntrospection.nonModels[modelOrNonModelName];\n            const nonModelField = nonModelDefinition?.fields?.[fieldName];\n            if (!nonModelDefinition) {\n                const isOwnerField = (0, resolveOwnerFields_1.resolveOwnerFields)(modelOrNonModelDefinition).includes(fieldName);\n                if (!modelField && !isOwnerField) {\n                    throw Error(`${fieldName} is not a field of model ${modelOrNonModelName}`);\n                }\n            }\n            else {\n                if (!nonModelField) {\n                    throw Error(`${fieldName} is not a field of custom type ${modelOrNonModelName}`);\n                }\n            }\n            return { [fieldName]: FIELD_IR };\n        }\n    };\n    return selectionSet.reduce((resultObj, path) => deepMergeSelectionSetObjects(dotNotationToObject(path, modelName), resultObj), {});\n}\nexports.customSelectionSetToIR = customSelectionSetToIR;\nconst modelsDefaultSelectionSetIR = (relatedModelDefinition) => {\n    const defaultSelectionSet = defaultSelectionSetForModel(relatedModelDefinition);\n    const reduced = defaultSelectionSet.reduce((acc, curVal) => {\n        acc[curVal] = FIELD_IR;\n        return acc;\n    }, {});\n    return reduced;\n};\n/**\n * Stringifies selection set IR\n * * @example\n * ### Given\n * ```ts\n * {\n *   id: '',\n *   comments: {\n *     items: { post: { id: '' } }\n *   }\n * }\n * ```\n * ### Returns\n * `'id comments { items { post { id } } }'`\n */\nfunction selectionSetIRToString(obj) {\n    const res = [];\n    Object.entries(obj).forEach(([fieldName, value]) => {\n        if (value === FIELD_IR) {\n            res.push(fieldName);\n        }\n        else if (typeof value === 'object' && value !== null) {\n            if (value?.items) {\n                res.push(fieldName, '{', 'items', '{', selectionSetIRToString(value.items), '}', '}');\n            }\n            else {\n                res.push(fieldName, '{', selectionSetIRToString(value), '}');\n            }\n        }\n    });\n    return res.join(' ');\n}\nexports.selectionSetIRToString = selectionSetIRToString;\n/**\n * Recursively merges selection set objects from `source` onto `target`.\n *\n * `target` will be updated. `source` will be left alone.\n *\n * @param source The object to merge into target.\n * @param target The object to be mutated.\n */\nfunction deepMergeSelectionSetObjects(source, target) {\n    const isObject = (obj) => obj && typeof obj === 'object';\n    for (const key in source) {\n        // This verification avoids 'Prototype Pollution' issue\n        if (!source.hasOwnProperty(key))\n            continue;\n        if (target.hasOwnProperty(key) && isObject(target[key])) {\n            deepMergeSelectionSetObjects(source[key], target[key]);\n        }\n        else {\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction generateSelectionSet(modelIntrospection, modelName, selectionSet) {\n    const modelDefinition = modelIntrospection.models[modelName];\n    const selSetIr = customSelectionSetToIR(modelIntrospection, modelName, selectionSet ?? defaultSelectionSetForModel(modelDefinition));\n    const selSetString = selectionSetIRToString(selSetIr);\n    return selSetString;\n}\nexports.generateSelectionSet = generateSelectionSet;\nfunction generateGraphQLDocument(modelIntrospection, modelName, modelOperation, listArgs, indexMeta) {\n    const modelDefinition = modelIntrospection.models[modelName];\n    const { name, pluralName, fields, primaryKeyInfo: { isCustomPrimaryKey, primaryKeyFieldName, sortKeyFieldNames, }, } = modelDefinition;\n    const { operationPrefix, usePlural } = exports.graphQLOperationsInfo[modelOperation];\n    const { selectionSet } = listArgs || {};\n    let graphQLFieldName;\n    let indexQueryArgs;\n    if (operationPrefix) {\n        graphQLFieldName = `${operationPrefix}${usePlural ? pluralName : name}`;\n    }\n    else if (indexMeta) {\n        const { queryField, pk, sk = [] } = indexMeta;\n        graphQLFieldName = queryField;\n        const skQueryArgs = sk.reduce((acc, fieldName) => {\n            const fieldType = fields[fieldName].type;\n            acc[fieldName] = `Model${fieldType}KeyConditionInput`;\n            return acc;\n        }, {});\n        indexQueryArgs = {\n            [pk]: `${fields[pk].type}!`,\n            ...skQueryArgs,\n        };\n    }\n    else {\n        throw new Error('Error generating GraphQL Document - invalid operation name');\n    }\n    let graphQLOperationType;\n    let graphQLSelectionSet;\n    let graphQLArguments;\n    const selectionSetFields = generateSelectionSet(modelIntrospection, modelName, selectionSet);\n    switch (modelOperation) {\n        case 'CREATE':\n        case 'UPDATE':\n        case 'DELETE':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    input: `${operationPrefix.charAt(0).toLocaleUpperCase() +\n                        operationPrefix.slice(1)}${name}Input!`,\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'mutation');\n        case 'READ':\n            graphQLArguments ??\n                (graphQLArguments = isCustomPrimaryKey\n                    ? [primaryKeyFieldName, ...sortKeyFieldNames].reduce((acc, fieldName) => {\n                        acc[fieldName] = `${fields[fieldName].type}!`;\n                        return acc;\n                    }, {})\n                    : {\n                        [primaryKeyFieldName]: `${fields[primaryKeyFieldName].type}!`,\n                    });\n            graphQLSelectionSet ?? (graphQLSelectionSet = selectionSetFields);\n        case 'LIST':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    filter: `Model${name}FilterInput`,\n                    limit: 'Int',\n                    nextToken: 'String',\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'query');\n            graphQLSelectionSet ??\n                (graphQLSelectionSet = `items { ${selectionSetFields} } nextToken __typename`);\n        case 'INDEX_QUERY':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    ...indexQueryArgs,\n                    filter: `Model${name}FilterInput`,\n                    limit: 'Int',\n                    nextToken: 'String',\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'query');\n            graphQLSelectionSet ??\n                (graphQLSelectionSet = `items { ${selectionSetFields} } nextToken __typename`);\n        case 'ONCREATE':\n        case 'ONUPDATE':\n        case 'ONDELETE':\n            graphQLArguments ??\n                (graphQLArguments = {\n                    filter: `ModelSubscription${name}FilterInput`,\n                });\n            graphQLOperationType ?? (graphQLOperationType = 'subscription');\n            graphQLSelectionSet ?? (graphQLSelectionSet = selectionSetFields);\n            break;\n        case 'OBSERVE_QUERY':\n        default:\n            throw new Error('Internal error: Attempted to generate graphql document for observeQuery. Please report this error.');\n    }\n    const graphQLDocument = `${graphQLOperationType}${graphQLArguments\n        ? `(${Object.entries(graphQLArguments).map(([fieldName, type]) => `\\$${fieldName}: ${type}`)})`\n        : ''} { ${graphQLFieldName}${graphQLArguments\n        ? `(${Object.keys(graphQLArguments).map(fieldName => `${fieldName}: \\$${fieldName}`)})`\n        : ''} { ${graphQLSelectionSet} } }`;\n    return graphQLDocument;\n}\nexports.generateGraphQLDocument = generateGraphQLDocument;\nfunction buildGraphQLVariables(modelDefinition, operation, arg, modelIntrospection, indexMeta) {\n    const { fields, primaryKeyInfo: { isCustomPrimaryKey, primaryKeyFieldName, sortKeyFieldNames, }, } = modelDefinition;\n    let variables = {};\n    // TODO: process input\n    switch (operation) {\n        case 'CREATE':\n            variables = {\n                input: arg\n                    ? normalizeMutationInput(arg, modelDefinition, modelIntrospection)\n                    : {},\n            };\n            break;\n        case 'UPDATE':\n            // readonly fields are not  updated\n            variables = {\n                input: arg\n                    ? Object.fromEntries(Object.entries(normalizeMutationInput(arg, modelDefinition, modelIntrospection)).filter(([fieldName]) => {\n                        const { isReadOnly } = fields[fieldName];\n                        return !isReadOnly;\n                    }))\n                    : {},\n            };\n            break;\n        case 'READ':\n        case 'DELETE':\n            // only identifiers are sent\n            if (arg) {\n                variables = isCustomPrimaryKey\n                    ? [primaryKeyFieldName, ...sortKeyFieldNames].reduce((acc, fieldName) => {\n                        acc[fieldName] = arg[fieldName];\n                        return acc;\n                    }, {})\n                    : { [primaryKeyFieldName]: arg[primaryKeyFieldName] };\n            }\n            if (operation === 'DELETE') {\n                variables = { input: variables };\n            }\n            break;\n        case 'LIST':\n            if (arg?.filter) {\n                variables.filter = arg.filter;\n            }\n            if (arg?.nextToken) {\n                variables.nextToken = arg.nextToken;\n            }\n            if (arg?.limit) {\n                variables.limit = arg.limit;\n            }\n            break;\n        case 'INDEX_QUERY':\n            const { pk, sk = [] } = indexMeta;\n            variables[pk] = arg[pk];\n            for (const skField of sk) {\n                variables[skField] = arg[skField];\n            }\n            if (arg?.filter) {\n                variables.filter = arg.filter;\n            }\n            if (arg?.nextToken) {\n                variables.nextToken = arg.nextToken;\n            }\n            if (arg?.limit) {\n                variables.limit = arg.limit;\n            }\n            break;\n        case 'ONCREATE':\n        case 'ONUPDATE':\n        case 'ONDELETE':\n            if (arg?.filter) {\n                variables = { filter: arg.filter };\n            }\n            break;\n        case 'OBSERVE_QUERY':\n            throw new Error('Internal error: Attempted to build variables for observeQuery. Please report this error.');\n            break;\n        default:\n            const exhaustiveCheck = operation;\n            throw new Error(`Unhandled operation case: ${exhaustiveCheck}`);\n    }\n    return variables;\n}\nexports.buildGraphQLVariables = buildGraphQLVariables;\n/**\n * Iterates over mutation input values and resolves any model inputs to their corresponding join fields/values\n *\n * @example\n * ### Usage\n * ```ts\n * const result = normalizeMutationInput({ post: post }, model, modelDefinition);\n * ```\n * ### Result\n * ```ts\n * { postId: \"abc123\" }\n * ```\n *\n */\nfunction normalizeMutationInput(mutationInput, model, modelIntrospection) {\n    const { fields } = model;\n    const normalized = {};\n    Object.entries(mutationInput).forEach(([inputFieldName, inputValue]) => {\n        const fieldType = fields[inputFieldName]?.type;\n        const relatedModelName = fieldType?.model;\n        if (relatedModelName) {\n            const association = fields[inputFieldName]?.association;\n            const relatedModelDef = modelIntrospection.models[relatedModelName];\n            const relatedModelPkInfo = relatedModelDef.primaryKeyInfo;\n            if (association?.connectionType === connectionType.HAS_ONE) {\n                const associationHasOne = association;\n                associationHasOne.targetNames.forEach((targetName, idx) => {\n                    const associatedFieldName = associationHasOne.associatedWith[idx];\n                    normalized[targetName] = inputValue[associatedFieldName];\n                });\n            }\n            if (association?.connectionType === connectionType.BELONGS_TO) {\n                const associationBelongsTo = association;\n                associationBelongsTo.targetNames.forEach((targetName, idx) => {\n                    if (idx === 0) {\n                        const associatedFieldName = relatedModelPkInfo.primaryKeyFieldName;\n                        normalized[targetName] = inputValue[associatedFieldName];\n                    }\n                    else {\n                        const associatedFieldName = relatedModelPkInfo.sortKeyFieldNames[idx - 1];\n                        normalized[targetName] = inputValue[associatedFieldName];\n                    }\n                });\n            }\n        }\n        else {\n            normalized[inputFieldName] = inputValue;\n        }\n    });\n    return normalized;\n}\nexports.normalizeMutationInput = normalizeMutationInput;\n/**\n * Produces a parameter object that can contains auth mode/token overrides\n * only if present in either `options` (first) or configured on the `client`\n * as a fallback.\n *\n * @param client Configured client from `generateClient`\n * @param options Args/Options object from call site.\n * @returns\n */\nfunction authModeParams(client, options = {}) {\n    return {\n        authMode: options.authMode || client[types_1.__authMode],\n        authToken: options.authToken || client[types_1.__authToken],\n    };\n}\nexports.authModeParams = authModeParams;\n/**\n * Retrieves custom headers from either the client or request options.\n * @param {client} V6Client | V6ClientSSRRequest | V6ClientSSRCookies - for extracting client headers\n * @param {requestHeaders} [CustomHeaders] - request headers\n * @returns {CustomHeaders} - custom headers\n */\nfunction getCustomHeaders(client, requestHeaders) {\n    let headers = client[types_1.__headers] || {};\n    // Individual request headers will take precedence over client headers.\n    // We intentionally do *not* merge client and request headers.\n    if (requestHeaders) {\n        headers = requestHeaders;\n    }\n    return headers;\n}\nexports.getCustomHeaders = getCustomHeaders;\n"],"names":[],"mappings":"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"}